"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[62635],{35318:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(27378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return t?a.createElement(h,l(l({ref:n},c),{},{components:t})):a.createElement(h,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},68799:function(e,n,t){var a=t(27378),r=Object.defineProperty,i=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,s=(e,n,t)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t;n.Z=function({children:e,hidden:n,className:t}){return a.createElement("div",((e,n)=>{for(var t in n||(n={}))l.call(n,t)&&s(e,t,n[t]);if(i)for(var t of i(n))o.call(n,t)&&s(e,t,n[t]);return e})({role:"tabpanel"},{hidden:n,className:t}),e)}},80673:function(e,n,t){t.d(n,{Z:function(){return b}});var a=t(27378),r=t(14324),i=t(46294),l=t(38944),o="tabItem_Ocg6",s=Object.defineProperty,u=Object.defineProperties,c=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,h=(e,n,t)=>n in e?s(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,g=(e,n)=>{for(var t in n||(n={}))d.call(n,t)&&h(e,t,n[t]);if(p)for(var t of p(n))m.call(n,t)&&h(e,t,n[t]);return e};function k(e){var n,t,r;const{lazy:s,block:p,defaultValue:d,values:m,groupId:h,className:k}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=null!=m?m:b.map((({props:{value:e,label:n,attributes:t}})=>({value:e,label:n,attributes:t}))),v=(0,i.lx)(f,((e,n)=>e.value===n.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===d?d:null!=(r=null!=d?d:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?r:null==(t=b[0])?void 0:t.props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:w}=(0,i.UB)(),[x,T]=(0,a.useState)(y),j=[],{blockElementScrollPositionUntilNextRender:C}=(0,i.o5)();if(null!=h){const e=N[h];null!=e&&e!==x&&f.some((n=>n.value===e))&&T(e)}const I=e=>{const n=e.currentTarget,t=j.indexOf(n),a=f[t].value;a!==x&&(C(n),T(a),null!=h&&w(h,a))},O=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=j.indexOf(e.currentTarget)+1;n=j[t]||j[0];break}case"ArrowLeft":{const t=j.indexOf(e.currentTarget)-1;n=j[t]||j[j.length-1];break}}null==n||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},k)},f.map((({value:e,label:n,attributes:t})=>{return a.createElement("li",(r=g({role:"tab",tabIndex:x===e?0:-1,"aria-selected":x===e,key:e,ref:e=>j.push(e),onKeyDown:O,onFocus:I,onClick:I},t),i={className:(0,l.Z)("tabs__item",o,null==t?void 0:t.className,{"tabs__item--active":x===e})},u(r,c(i))),null!=n?n:e);var r,i}))),s?(0,a.cloneElement)(b.filter((e=>e.props.value===x))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==x})))))}function b(e){const n=(0,r.Z)();return a.createElement(k,g({key:String(n)},e))}},12424:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return h},contentTitle:function(){return g},metadata:function(){return k},toc:function(){return b},default:function(){return v}});var a=t(35318),r=t(80673),i=t(68799),l=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,n,t)=>n in e?l(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,m=(e,n)=>{for(var t in n||(n={}))c.call(n,t)&&d(e,t,n[t]);if(u)for(var t of u(n))p.call(n,t)&&d(e,t,n[t]);return e};const h={id:"code-blocks",title:"Code blocks",description:"Handling code blocks in Docusaurus Markdown",slug:"/markdown-features/code-blocks"},g=void 0,k={unversionedId:"guides/markdown-features/code-blocks",id:"version-2.0.0-beta.14/guides/markdown-features/code-blocks",title:"Code blocks",description:"Handling code blocks in Docusaurus Markdown",source:"@site/versioned_docs/version-2.0.0-beta.14/guides/markdown-features/markdown-features-code-blocks.mdx",sourceDirName:"guides/markdown-features",slug:"/markdown-features/code-blocks",permalink:"/docs/2.0.0-beta.14/markdown-features/code-blocks",editUrl:"https://github.com/TheBestOrNothing/thebestornothing.github.io/edit/main/website/docs/guides/markdown-features/markdown-features-code-blocks.mdx",tags:[],version:"2.0.0-beta.14",lastUpdatedBy:"Gitcoins",lastUpdatedAt:1644226051,formattedLastUpdatedAt:"2/7/2022",frontMatter:{id:"code-blocks",title:"Code blocks",description:"Handling code blocks in Docusaurus Markdown",slug:"/markdown-features/code-blocks"},sidebar:"docs",previous:{title:"Tabs",permalink:"/docs/2.0.0-beta.14/markdown-features/tabs"},next:{title:"Admonitions",permalink:"/docs/2.0.0-beta.14/markdown-features/admonitions"}},b=[{value:"Code title",id:"code-title",children:[],level:2},{value:"Syntax highlighting",id:"syntax-highlighting",children:[{value:"Theming",id:"theming",children:[],level:3},{value:"Supported Languages",id:"supported-languages",children:[],level:3}],level:2},{value:"Line highlighting",id:"line-highlighting",children:[{value:"Multiple line highlighting",id:"multiple-line-highlighting",children:[],level:3},{value:"Highlighting with comments",id:"highlighting-with-comments",children:[],level:3}],level:2},{value:"Interactive code editor",id:"interactive-code-editor",children:[{value:"Imports",id:"imports",children:[],level:3}],level:2},{value:"Multi-language support code blocks",id:"multi-language-support-code-blocks",children:[{value:"Docusaurus npm2yarn remark plugin",id:"npm2yarn-remark-plugin",children:[],level:3}],level:2}],f={toc:b};function v(e){var n,t=e,{components:l}=t,d=((e,n)=>{var t={};for(var a in e)c.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&u)for(var a of u(e))n.indexOf(a)<0&&p.call(e,a)&&(t[a]=e[a]);return t})(t,["components"]);return(0,a.kt)("wrapper",(n=m(m({},f),d),o(n,s({components:l,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"Code blocks within documentation are super-powered \ud83d\udcaa."),(0,a.kt)("h2",m({},{id:"code-title"}),"Code title"),(0,a.kt)("p",null,"You can add a title to the code block by adding ",(0,a.kt)("inlineCode",{parentName:"p"},"title")," key after the language (leave a space between them)."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{}),'```jsx title="/src/components/HelloCodeTitle.js"\nfunction HelloCodeTitle(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n```\n')),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:'title="/src/components/HelloCodeTitle.js"',title:'"/src/components/HelloCodeTitle.js"'}),"function HelloCodeTitle(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n")),(0,a.kt)("h2",m({},{id:"syntax-highlighting"}),"Syntax highlighting"),(0,a.kt)("p",null,"Code blocks are text blocks wrapped around by strings of 3 backticks. You may check out ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/mdx-js/specification"}),"this reference")," for specifications of MDX."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{}),"```jsx\nconsole.log('Every repo must come with a mascot.');\n```\n")),(0,a.kt)("p",null,"Use the matching language meta string for your code block, and Docusaurus will pick up syntax highlighting automatically, powered by ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/FormidableLabs/prism-react-renderer"}),"Prism React Renderer"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"console.log('Every repo must come with a mascot.');\n")),(0,a.kt)("h3",m({},{id:"theming"}),"Theming"),(0,a.kt)("p",null,"By default, the Prism ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/FormidableLabs/prism-react-renderer#theming"}),"syntax highlighting theme")," we use is ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/FormidableLabs/prism-react-renderer/blob/master/src/themes/palenight.js"}),"Palenight"),". You can change this to another theme by passing ",(0,a.kt)("inlineCode",{parentName:"p"},"theme")," field in ",(0,a.kt)("inlineCode",{parentName:"p"},"prism")," as ",(0,a.kt)("inlineCode",{parentName:"p"},"themeConfig")," in your docusaurus.config.js."),(0,a.kt)("p",null,"For example, if you prefer to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"dracula")," highlighting theme:"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-js",metastring:'{4} title="docusaurus.config.js"',"{4}":!0,title:'"docusaurus.config.js"'}),"module.exports = {\n  themeConfig: {\n    prism: {\n      theme: require('prism-react-renderer/themes/dracula'),\n    },\n  },\n};\n")),(0,a.kt)("h3",m({},{id:"supported-languages"}),"Supported Languages"),(0,a.kt)("p",null,"By default, Docusaurus comes with a subset of ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/FormidableLabs/prism-react-renderer/blob/master/src/vendor/prism/includeLangs.js"}),"commonly used languages"),"."),(0,a.kt)("div",m({},{className:"admonition admonition-caution alert alert--warning"}),(0,a.kt)("div",m({parentName:"div"},{className:"admonition-heading"}),(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",m({parentName:"h5"},{className:"admonition-icon"}),(0,a.kt)("svg",m({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),(0,a.kt)("path",m({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),(0,a.kt)("div",m({parentName:"div"},{className:"admonition-content"}),(0,a.kt)("p",{parentName:"div"},"Some popular languages like Java, C#, or PHP are not enabled by default."))),(0,a.kt)("p",null,"To add syntax highlighting for any of the other ",(0,a.kt)("a",m({parentName:"p"},{href:"https://prismjs.com/#supported-languages"}),"Prism supported languages"),", define it in an array of additional languages."),(0,a.kt)("p",null,"For example, if you want to add highlighting for the ",(0,a.kt)("inlineCode",{parentName:"p"},"powershell")," language:"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-js",metastring:'{5} title="docusaurus.config.js"',"{5}":!0,title:'"docusaurus.config.js"'}),"module.exports = {\n  // ...\n  themeConfig: {\n    prism: {\n      additionalLanguages: ['powershell'],\n    },\n    // ...\n  },\n};\n")),(0,a.kt)("p",null,"After adding ",(0,a.kt)("inlineCode",{parentName:"p"},"additionalLanguages"),", restart Docusaurus."),(0,a.kt)("p",null,"If you want to add highlighting for languages not yet supported by Prism, you can swizzle ",(0,a.kt)("inlineCode",{parentName:"p"},"prism-include-languages"),":"),(0,a.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npm run swizzle @docusaurus/theme-classic prism-include-languages\n"))),(0,a.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"yarn run swizzle @docusaurus/theme-classic prism-include-languages\n")))),(0,a.kt)("p",null,"It will produce ",(0,a.kt)("inlineCode",{parentName:"p"},"prism-include-languages.js")," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"src/theme")," folder. You can add highlighting support for custom languages by editing ",(0,a.kt)("inlineCode",{parentName:"p"},"prism-include-languages.js"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-js",metastring:'{8} title="src/theme/prism-include-languages.js"',"{8}":!0,title:'"src/theme/prism-include-languages.js"'}),"const prismIncludeLanguages = (Prism) => {\n  // ...\n\n  additionalLanguages.forEach((lang) => {\n    require(`prismjs/components/prism-${lang}`); // eslint-disable-line\n  });\n\n  require('/path/to/your/prism-language-definition');\n\n  // ...\n};\n")),(0,a.kt)("p",null,"You can refer to ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/PrismJS/prism/tree/master/components"}),"Prism's official language definitions")," when you are writing your own language definitions."),(0,a.kt)("h2",m({},{id:"line-highlighting"}),"Line highlighting"),(0,a.kt)("p",null,"You can bring emphasis to certain lines of code by specifying line ranges after the language meta string (leave a space after the language)."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{}),"```jsx {3}\nfunction HighlightSomeText(highlight) {\n  if (highlight) {\n    return 'This text is highlighted!';\n  }\n\n  return 'Nothing highlighted';\n}\n```\n")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"{3}","{3}":!0}),"function HighlightSomeText(highlight) {\n  if (highlight) {\n    return 'This text is highlighted!';\n  }\n\n  return 'Nothing highlighted';\n}\n")),(0,a.kt)("p",null,"To accomplish this, Docusaurus adds the ",(0,a.kt)("inlineCode",{parentName:"p"},"docusaurus-highlight-code-line")," class to the highlighted lines. You will need to define your own styling for this CSS, possibly in your ",(0,a.kt)("inlineCode",{parentName:"p"},"src/css/custom.css")," with a custom background color which is dependent on your selected syntax highlighting theme. The color given below works for the default highlighting theme (Palenight), so if you are using another theme, you will have to tweak the color accordingly."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-css",metastring:'title="/src/css/custom.css"',title:'"/src/css/custom.css"'}),".docusaurus-highlight-code-line {\n  background-color: rgb(72, 77, 91);\n  display: block;\n  margin: 0 calc(-1 * var(--ifm-pre-padding));\n  padding: 0 var(--ifm-pre-padding);\n}\n\n/* If you have a different syntax highlighting theme for dark mode. */\nhtml[data-theme='dark'] .docusaurus-highlight-code-line {\n  /* Color which works with dark mode syntax highlighting theme */\n  background-color: rgb(100, 100, 100);\n}\n")),(0,a.kt)("h3",m({},{id:"multiple-line-highlighting"}),"Multiple line highlighting"),(0,a.kt)("p",null,"To highlight multiple lines, separate the line numbers by commas or use the range syntax to select a chunk of lines. This feature uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"parse-number-range")," library and you can find ",(0,a.kt)("a",m({parentName:"p"},{href:"https://www.npmjs.com/package/parse-numeric-range"}),"more syntax")," on their project details."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{}),"```jsx {1,4-6,11}\nimport React from 'react';\n\nfunction MyComponent(props) {\n  if (props.isBar) {\n    return <div>Bar</div>;\n  }\n\n  return <div>Foo</div>;\n}\n\nexport default MyComponent;\n```\n")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"{1,4-6,11}","{1,4-6,11}":!0}),"import React from 'react';\n\nfunction MyComponent(props) {\n  if (props.isBar) {\n    return <div>Bar</div>;\n  }\n\n  return <div>Foo</div>;\n}\n\nexport default MyComponent;\n")),(0,a.kt)("h3",m({},{id:"highlighting-with-comments"}),"Highlighting with comments"),(0,a.kt)("p",null,"You can also use comments with ",(0,a.kt)("inlineCode",{parentName:"p"},"highlight-next-line"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"highlight-start"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"highlight-end")," to select which lines are highlighted."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{}),"```jsx\nfunction HighlightSomeText(highlight) {\n  if (highlight) {\n    // highlight-next-line\n    return 'This text is highlighted!';\n  }\n\n  return 'Nothing highlighted';\n}\n\nfunction HighlightMoreText(highlight) {\n  // highlight-start\n  if (highlight) {\n    return 'This range is highlighted!';\n  }\n  // highlight-end\n\n  return 'Nothing highlighted';\n}\n```\n")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),"function HighlightSomeText(highlight) {\n  if (highlight) {\n    // highlight-next-line\n    return 'This text is highlighted!';\n  }\n\n  return 'Nothing highlighted';\n}\n\nfunction HighlightMoreText(highlight) {\n  // highlight-start\n  if (highlight) {\n    return 'This range is highlighted!';\n  }\n  // highlight-end\n\n  return 'Nothing highlighted';\n}\n")),(0,a.kt)("p",null,"Supported commenting syntax:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Language"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Syntax"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"JavaScript"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"/* ... */")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"// ..."))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"JSX"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"{/* ... */}"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"Python"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"# ..."))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"HTML"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"\x3c!-- ... --\x3e"))))),(0,a.kt)("p",null,"If there's a syntax that is not currently supported, we are open to adding them! Pull requests welcome."),(0,a.kt)("h2",m({},{id:"interactive-code-editor"}),"Interactive code editor"),(0,a.kt)("p",null,"(Powered by ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/FormidableLabs/react-live"}),"React Live"),")"),(0,a.kt)("p",null,"You can create an interactive coding editor with the ",(0,a.kt)("inlineCode",{parentName:"p"},"@docusaurus/theme-live-codeblock")," plugin."),(0,a.kt)("p",null,"First, add the plugin to your package."),(0,a.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npm install --save @docusaurus/theme-live-codeblock\n"))),(0,a.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"yarn add @docusaurus/theme-live-codeblock\n")))),(0,a.kt)("p",null,"You will also need to add the plugin to your ",(0,a.kt)("inlineCode",{parentName:"p"},"docusaurus.config.js"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-js",metastring:"{3}","{3}":!0}),"module.exports = {\n  // ...\n  themes: ['@docusaurus/theme-live-codeblock'],\n  // ...\n};\n")),(0,a.kt)("p",null,"To use the plugin, create a code block with ",(0,a.kt)("inlineCode",{parentName:"p"},"live")," attached to the language meta string."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{}),"```jsx live\nfunction Clock(props) {\n  const [date, setDate] = useState(new Date());\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return (\n    <div>\n      <h2>It is {date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n}\n```\n")),(0,a.kt)("p",null,"The code block will be rendered as an interactive editor. Changes to the code will reflect on the result panel live."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"function Clock(props) {\n  const [date, setDate] = useState(new Date());\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  return (\n    <div>\n      <h2>It is {date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n}\n")),(0,a.kt)("h3",m({},{id:"imports"}),"Imports"),(0,a.kt)("div",m({},{className:"admonition admonition-caution alert alert--warning"}),(0,a.kt)("div",m({parentName:"div"},{className:"admonition-heading"}),(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",m({parentName:"h5"},{className:"admonition-icon"}),(0,a.kt)("svg",m({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),(0,a.kt)("path",m({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"react-live and imports")),(0,a.kt)("div",m({parentName:"div"},{className:"admonition-content"}),(0,a.kt)("p",{parentName:"div"},"It is not possible to import components directly from the react-live code editor, you have to define available imports upfront."))),(0,a.kt)("p",null,"By default, all React imports are available. If you need more imports available, swizzle the react-live scope:"),(0,a.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npm run swizzle @docusaurus/theme-live-codeblock ReactLiveScope\n"))),(0,a.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"yarn run swizzle @docusaurus/theme-live-codeblock ReactLiveScope\n")))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:'{3-15,21} title="src/theme/ReactLiveScope/index.js"',"{3-15,21}":!0,title:'"src/theme/ReactLiveScope/index.js"'}),"import React from 'react';\n\nconst ButtonExample = (props) => (\n  <button\n    {...props}\n    style={{\n      backgroundColor: 'white',\n      border: 'solid red',\n      borderRadius: 20,\n      padding: 10,\n      cursor: 'pointer',\n      ...props.style,\n    }}\n  />\n);\n\n// Add react-live imports you need here\nconst ReactLiveScope = {\n  React,\n  ...React,\n  ButtonExample,\n};\n\nexport default ReactLiveScope;\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ButtonExample")," component is now available to use:"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"function MyPlayground(props) {\n  return (\n    <div>\n      <ButtonExample onClick={() => alert('hey!')}>Click me</ButtonExample>\n    </div>\n  );\n}\n")),(0,a.kt)("h2",m({},{id:"multi-language-support-code-blocks"}),"Multi-language support code blocks"),(0,a.kt)("p",null,"With MDX, you can easily create interactive components within your documentation, for example, to display code in multiple programming languages and switching between them using a tabs component."),(0,a.kt)("p",null,"Instead of implementing a dedicated component for multi-language support code blocks, we've implemented a generic Tabs component in the classic theme so that you can use it for other non-code scenarios as well."),(0,a.kt)("p",null,"The following example is how you can have multi-language code tabs in your docs. Note that the empty lines above and below each language block is ",(0,a.kt)("strong",{parentName:"p"},"intentional"),". This is a current limitation of MDX, you have to leave empty lines around Markdown syntax for the MDX parser to know that it's Markdown syntax and not JSX."),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-jsx"}),'import Tabs from \'@theme/Tabs\';\nimport TabItem from \'@theme/TabItem\';\n\n<Tabs>\n<TabItem value="js" label="JavaScript">\n\n```js\nfunction helloWorld() {\n  console.log(\'Hello, world!\');\n}\n```\n\n</TabItem>\n<TabItem value="py" label="Python">\n\n```py\ndef hello_world():\n  print \'Hello, world!\'\n```\n\n</TabItem>\n<TabItem value="java" label="Java">\n\n```java\nclass HelloWorld {\n  public static void main(String args[]) {\n    System.out.println("Hello, World");\n  }\n}\n```\n\n</TabItem>\n</Tabs>\n')),(0,a.kt)("p",null,"And you will get the following:"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-js"}),"function helloWorld() {\n  console.log('Hello, world!');\n}\n"))),(0,a.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-py"}),"def hello_world():\n  print 'Hello, world!'\n"))),(0,a.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-java"}),'class HelloWorld {\n  public static void main(String args[]) {\n    System.out.println("Hello, World");\n  }\n}\n')))),(0,a.kt)("p",null,"If you have multiple of these multi-language code tabs, and you want to sync the selection across the tab instances, refer to the ",(0,a.kt)("a",m({parentName:"p"},{href:"/docs/2.0.0-beta.14/markdown-features/tabs#syncing-tab-choices"}),"Syncing tab choices section"),"."),(0,a.kt)("h3",m({},{id:"npm2yarn-remark-plugin"}),"Docusaurus npm2yarn remark plugin"),(0,a.kt)("p",null,"Displaying CLI commands in both NPM and Yarn is a very common need, for example:"),(0,a.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npm install @docusaurus/remark-plugin-npm2yarn\n"))),(0,a.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"yarn add @docusaurus/remark-plugin-npm2yarn\n")))),(0,a.kt)("p",null,"Docusaurus provides such a utility out of the box, freeing you from using the ",(0,a.kt)("inlineCode",{parentName:"p"},"Tabs")," component every time. To enable this feature, first install the ",(0,a.kt)("inlineCode",{parentName:"p"},"@docusaurus/remark-plugin-npm2yarn")," package as above, and then in ",(0,a.kt)("inlineCode",{parentName:"p"},"docusaurus.config.js"),", for the plugins where you need this feature (doc, blog, pages, etc.), register it in the ",(0,a.kt)("inlineCode",{parentName:"p"},"remarkPlugins")," option. (See ",(0,a.kt)("a",m({parentName:"p"},{href:"/docs/2.0.0-beta.14/api/plugins/@docusaurus/plugin-content-docs#ex-config"}),"Docs configuration")," for more details on configuration format)"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-js",metastring:'title="docusaurus.config.js"',title:'"docusaurus.config.js"'}),"module.exports = {\n  // ...\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          // highlight-start\n          remarkPlugins: [\n            [require('@docusaurus/remark-plugin-npm2yarn'), {sync: true}],\n          ],\n          // highlight-end\n        },\n        pages: {\n          // highlight-next-line\n          remarkPlugins: [require('@docusaurus/remark-plugin-npm2yarn')],\n        },\n        blog: {\n          // ...\n        },\n      },\n    ],\n  ],\n};\n")),(0,a.kt)("p",null,"And then use it by adding the ",(0,a.kt)("inlineCode",{parentName:"p"},"npm2yarn")," key to the code block:"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-md"}),"```bash npm2yarn\nnpm install @docusaurus/remark-plugin-npm2yarn\n```\n")),(0,a.kt)("p",null,"Using the ",(0,a.kt)("inlineCode",{parentName:"p"},"{sync: true}")," option would make all tab choices synced. Because the choice is stored under the same namespace ",(0,a.kt)("inlineCode",{parentName:"p"},"npm2yarn"),", different ",(0,a.kt)("inlineCode",{parentName:"p"},"npm2yarn")," plugin instances would also sync their choices."))}v.isMDXComponent=!0}}]);